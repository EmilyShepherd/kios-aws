# DHCPD Pod
#
# This pod is responsible for speaking to the AWS VPC DHCP server, to
# obtain its appropriate IPv6* and IPv4 addresses.
#
# Currently this Pod does not set other DHCP provided items such as NTP,
# DNS or hostname. But we hope to possibly set this in the future.
#
# *AWS VPCs do not support IPv6 SLAAC. Instead, they use DHCPv6 to hand
# out individual IPv6 addresses. As a result this daemon is required,
# even in IPv6 VPCs.
apiVersion: v1
kind: Pod
metadata:
  name: dhcpcd
  namespace: kube-node-lease
spec:
  containers:
  - image: docker.io/emilyls/dhcp:9.4.1
    args:
    # Technically, when receiving an IP address from a DHCP server, the
    # client _should_ perform an ARP check for the address to ensure
    # that it is not in use by another host on the network. The AWS VPCs
    # work mean that they are very locked down, so it isn't possible for
    # another host to have an IP address, if we've been given it. So we
    # can save a few seconds at boot time by skipping the ARP check.
    - --noarp

    # Normally DHCP undoes all of its settings when it terminates. We do
    # not want it to do so in this context, as its common for DHCP to be
    # restarted during the boot sequence when the system's hostname
    # changes. We do not want to interrupt our internet connectivity.
    - --persistent

    # kiOS does not run udev, so thankfully we can guarantee that there
    # will be an ethernet adaptor called "eth0".
    - eth0
    name: dhcpcd
    volumeMounts:
    - mountPath: /etc
      name: config
    - mountPath: /var/run/dhcpcd
      name: runtime
      subPath: run
    - mountPath: /var/db/dhcpcd
      name: runtime
      subPath: db
    # Currently we require running as root but this may change
    securityContext:
      privileged: true
      capabilities:
        drop:
        - ALL
        add:
        # Required to allow DHCPCD to set IP addresses and routes on the
        # ethernet card, based on the response from the DHCP server.
        - NET_ADMIN

        # Required so that DHCPCD can send out DHCP messages which are
        # not one of the managed Linux Socket Types.
        - NET_RAW

  # Strictly required as this pod is intended to manage the IP address
  # of the host network.
  hostNetwork: true
  priorityClassName: system-node-critical
  tolerations:
  - operator: Exists
  volumes:
  - hostPath:
      path: /etc
      type: Directory
    name: config
  - emptyDir: {}
    name: runtime

